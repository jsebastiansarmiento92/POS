package ventas;

import java.io.InputStream;
import java.util.Enumeration;

import alimentos.ListaAlimentosAd;
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import ventas.LecturaSerial.LeerSerial;

/**
 *
 * @author jseba
 */
public class BasculaFrame extends javax.swing.JFrame {

    /**
     * Creates new form BasculaFrame
     */
	
	private ListaAlimentosAd ad;
	CommPortIdentifier portId;
	Enumeration puertos;
	SerialPort serialport;
	static InputStream entrada = null;
	Thread t;
	//private String puertoCom="";
	private boolean estadoPuertos=true;
	private ListaAlimentosAd productosAd;
	private LeerSerial leerSerial;
	
    public BasculaFrame() {
        initComponents();
    }

    public BasculaFrame(ListaAlimentosAd listaAlimentosAd) {
		// TODO Auto-generated constructor stub
    	initComponents();
    	this.ad=listaAlimentosAd;
    	iniLectura();
	}
    public void iniLectura() {

    	  puertos=CommPortIdentifier.getPortIdentifiers();
    	  this.leerSerial=new LeerSerial(this);
        t = new Thread(leerSerial);
        
        while (puertos.hasMoreElements()&&estadoPuertos) { //para recorrer el numero de los puertos, y especificar con cual quiero trabajar 
        	//hasmorelements mientras tenga mas eleementos
        	portId = (CommPortIdentifier) puertos.nextElement(); //next elemento recorre uno por uno
        	System.out.println(portId.getName()); //puertos disponbibles
        	if (portId.getName().equalsIgnoreCase(portId.getName())) {
        		try {
        		serialport= (SerialPort)portId.open("LecturaSerial", 2);//tiempo en ms
    				entrada = serialport.getInputStream();//esta variable del tipo InputStream obtiene el dato serial
   				t.start(); // inciamos el hilo para realizar nuestra accion de imprimir el dato serial
     		 
  			} catch (Exception e) {
  			//	LecturaSerialRec();
  				System.out.println("error en el puerto");
  				estadoPuertos=false;
  			} } }
    	
    }
	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	
    	//this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    //	this.dispose();
    	//System.exit(0);
    	this.setLocationRelativeTo(null);
        labelPeso = new javax.swing.JLabel();
        labelValor = new javax.swing.JLabel();
        buttonEnviar = new javax.swing.JButton();
      //  setClosable(true);
     //   setIconifiable(true);
        setTitle("Peso bascula");
      //  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelPeso.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        labelPeso.setText("Peso:");

        labelValor.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        buttonEnviar.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        buttonEnviar.setText("Enviar");
        buttonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(labelPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(labelValor, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(buttonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPeso, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(buttonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }                 
    private void buttonEnviarActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    	System.out.println("se estan enviando los datos");
    	
    	
    }  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BasculaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BasculaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BasculaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BasculaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BasculaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify   
    private javax.swing.JButton buttonEnviar;
    private javax.swing.JLabel labelPeso;
    private javax.swing.JLabel labelValor;
    // End of variables declaration         
    
    public static class LeerSerial implements Runnable{


 	   int aux;
 	   boolean estadoHilo=true;
 	   private String peso="";
 	   private String pesoFin="";
 	   private BasculaFrame basculaFrame;
        public LeerSerial(BasculaFrame basculaFrame) {
        	//run();
        	this.basculaFrame=basculaFrame;
		// TODO Auto-generated constructor stub
	}
		public void run () {
     	   while(estadoHilo){
     		  try {
 				aux = entrada.read(); // aqui estamos obteniendo nuestro dato serial
 				Thread.sleep(10);
  				if (aux>0) {
  					if (((char)aux<58)&&((char)aux>45)||(char)aux==103) {
  						
  						if (aux==103) {
  						
  							pesoFin=peso;
  							System.out.println(pesoFin);
  							basculaFrame.getLabelValor().setText(pesoFin);
  							peso="";
 						}else
  						//System.out.print((char)aux);//imprimimos el dato serial
  						peso+=(char)aux;
 					}
 					
 				}	
  				
 			} catch (Exception e) {
 				
 					System.out.println("error en el hilo");
 					estadoHilo=false;
 					//this.finalize();
 			
 					// TODO Auto-generated catch block
 				

  			}
     		  } }
 	public String getPesoFin() {
 		return pesoFin;
 	}
 	public void setPesoFin(String pesoFin) {
 		this.pesoFin = pesoFin;
 	}
   	
    }

	public javax.swing.JLabel getLabelValor() {
		return labelValor;
	}

	public void setLabelValor(javax.swing.JLabel labelValor) {
		this.labelValor = labelValor;
	}
    
}
