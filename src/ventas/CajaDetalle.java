/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas;

import alimentos.ListaAlimentosAd;
import alimentos.OpcionesAl;
import app.bolivia.swing.JCTextField;
import com.sun.org.apache.bcel.internal.generic.AALOAD;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import principal.BasculaIni;
import static principal.MenuPrincipalAd.escritorio;
import static ventas.CajaAd.cambio;
import static ventas.CajaAd.numFac1;
import static ventas.CajaAd.recibi;
import static ventas.CajaAd.tablaCaja;
import static ventas.CajaAd.total;

/**
 *
 * @author Rojeru San CL
 */
public class CajaDetalle extends javax.swing.JInternalFrame {

    /**
     * Creates new form Usuarios
     */
    BasculaIni basculaIni;
    DecimalFormat formatea;
  
    public boolean estacerrado(Object obj) {
        JInternalFrame[] activos = escritorio.getAllFrames();
        boolean cerrado = true;
        int i = 0;
        while (i < activos.length && cerrado) {
            if (activos[i] == obj) {
                cerrado = false;
            }
            i++;
        }
        return cerrado;
    }

    public CajaDetalle() {
        formatea = new DecimalFormat("###,###.##");
        this.basculaIni = new BasculaIni();
        System.out.println("peso actual " + basculaIni.getPeso());
        initComponents();
        tablaCajaDetalle.getTableHeader().setDefaultRenderer(new principal.EstiloTablaHeader());
        tablaCajaDetalle.setDefaultRenderer(Object.class, new principal.EstiloTablaRenderer());
        this.setFrameIcon(new ImageIcon("C:\\Pos\\data\\imagenes\\caja\\icono.png"));
        tablaCajaDetalle.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //limpiaCampos();

    }

    public static String fechaactual() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        return formatofecha.format(fecha);

    }

    void limpiaCampos() {
        DefaultTableModel modelo = (DefaultTableModel) tablaCajaDetalle.getModel();

        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
        //recibi.setText("");
       // cambio.setText("");
        totalDetalle.setText("0.0");
       // fecha.setText("");
      //  fecha.setText(fechaactual());
       // OpcionesVen.numeros();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        calculo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCajaDetalle = new javax.swing.JTable();
        totalDetalle = new app.bolivia.swing.JCTextField();
        codigoL3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fechaDetalle = new app.bolivia.swing.JCTextField();
        codigoL5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        numFacDetalle = new app.bolivia.swing.JCTextField();
        codigoL4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("CAJA DE CORBO");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "OPCIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        calculo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        calculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/principal/caja1.png"))); // NOI18N
        calculo.setBorder(null);
        calculo.setContentAreaFilled(false);
        calculo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calculo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        calculo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        calculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("IMPRIMIR");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calculo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaCajaDetalle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tablaCajaDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "TIPO ALIMENTO", "DESCRIPCIÓN", "PRECIO $", "CANTIDAD", "IMPORTE $"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCajaDetalle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaCajaDetalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaCajaDetalleKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCajaDetalle);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 940, 350));

        totalDetalle.setEditable(false);
        totalDetalle.setBackground(new java.awt.Color(34, 102, 145));
        totalDetalle.setBorder(null);
        totalDetalle.setForeground(new java.awt.Color(255, 255, 255));
        totalDetalle.setFont(new java.awt.Font("Tahoma", 1, 66)); // NOI18N
        totalDetalle.setOpaque(false);
        totalDetalle.setPhColor(new java.awt.Color(255, 255, 255));
        totalDetalle.setPlaceholder("TOTAL");
        totalDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalDetalleActionPerformed(evt);
            }
        });
        jPanel4.add(totalDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 330, 90));

        codigoL3.setIcon(new javax.swing.ImageIcon("C:\\Pos\\data\\imagenes\\caja\\total.png")); // NOI18N
        jPanel4.add(codigoL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 590, 200));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Pos\\data\\imagenes\\principal\\norm.png")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Central de abastos");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TELEFONOS:");

        fechaDetalle.setEditable(false);
        fechaDetalle.setBackground(new java.awt.Color(34, 102, 145));
        fechaDetalle.setBorder(null);
        fechaDetalle.setForeground(new java.awt.Color(255, 255, 255));
        fechaDetalle.setFocusCycleRoot(true);
        fechaDetalle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fechaDetalle.setOpaque(false);
        fechaDetalle.setPhColor(new java.awt.Color(255, 255, 255));
        fechaDetalle.setPlaceholder("FECHA");
        fechaDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaDetalleActionPerformed(evt);
            }
        });

        codigoL5.setIcon(new javax.swing.ImageIcon("C:\\Pos\\data\\imagenes\\caja\\fecha.png")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(fechaDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(codigoL5))
                .addGap(78, 78, 78))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(fechaDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(codigoL5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numFacDetalle.setEditable(false);
        numFacDetalle.setBackground(new java.awt.Color(34, 102, 145));
        numFacDetalle.setBorder(null);
        numFacDetalle.setForeground(new java.awt.Color(255, 255, 255));
        numFacDetalle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        numFacDetalle.setOpaque(false);
        numFacDetalle.setPhColor(new java.awt.Color(255, 255, 255));
        numFacDetalle.setPlaceholder("FACTURA");
        jPanel6.add(numFacDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 130, 30));

        codigoL4.setIcon(new javax.swing.ImageIcon("C:\\Pos\\data\\imagenes\\caja\\numFac.png")); // NOI18N
        jPanel6.add(codigoL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 50));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("NÚMERO DE VENTA");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
alimentos.ListaAlimentosAd la;
    private void calculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculoActionPerformed
                
                ImpresoraDetalle impresora= new ImpresoraDetalle();
                System.out.println("antes de ingesar a clase de imprimir, cantidad de filas "+ tablaCajaDetalle.getRowCount()); 
                impresora.imprimirTicket(totalDetalle.getText(), totalDetalle.getText());
                
                JOptionPane.showMessageDialog(this, "Reimpresion realizada.", "Caja de cobro", 0,
                        new ImageIcon("C:\\Pos\\data\\imagenes\\caja\\ralizada.png"));
                limpiaCampos();
                if (principal.MenuPrincipalAd.cerra1) {
                    OpcionesVen.listar("");
                }
                
                
    }//GEN-LAST:event_calculoActionPerformed
   
    private void totalDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalDetalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalDetalleActionPerformed

    private void tablaCajaDetalleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaCajaDetalleKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaCajaDetalleKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void fechaDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaDetalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaDetalleActionPerformed
    public void ingresarBascula(String datos[]) {
        DefaultTableModel tabladet = (DefaultTableModel) tablaCajaDetalle.getModel();
        String[] dato = new String[6];
        int c = 0;
        int j = 0;
        
        try{
            BasculaIni basculaIni = new BasculaIni();
              double valorPeso = Double.parseDouble(basculaIni.lecturaFija());
        //alerta de modificacion de datos quemados
     // double valorPeso=5.61321;
        if (valorPeso <= 0) {
            JOptionPane.showMessageDialog(null, "verificar peso no acepta valores en cero o menores que cero");
            return;
        } else {
            System.out.println("else donde el valor de peso de bascula es diferente de 0");

            for (int i = 0; i < tablaCajaDetalle.getRowCount(); i++) {
                Object com = tablaCajaDetalle.getValueAt(i, 0);
                Object cant1 = tablaCajaDetalle.getValueAt(i, 4);
                System.out.println("valor com " + com);
                if (datos[0].equals(com)) {
                    System.out.println("INGRESO IF DONDE SUMA CANTIDA Y PESO DE PRODUCTO YA PESADO");
                    j = i;
                    double cantT = valorPeso;
                    tablaCajaDetalle.setValueAt(cantT, i, 4);
                    c++;
                    calcularBascula();
                   // recibi.setText("");
                  //  cambio.setText("");
                }

            }
            System.out.println("valor de c= " + c);
            if (c == 0) {
                System.out.println("if donde compara c==0 con abscula");
                dato[0] = datos[0];
                dato[1] = datos[1];
                dato[2] =datos[2] ;
                dato[3] = formatea.format(Double.parseDouble(datos[3]));
                dato[4] = valorPeso + "";

                tabladet.addRow(dato);

                tablaCajaDetalle.setModel(tabladet);
                calcularBascula();

               // CajaDetalle.recibi.setText("");
              //  CajaDetalle.cambio.setText("");
            }
        }
        }catch (Exception e){
          //  buscar.setText("");
            System.out.println("ingreso a execpcion de enter para bascula");
            
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
public void ingresarBasculaSuma(String datos[]) {
        DefaultTableModel tabladet = (DefaultTableModel) tablaCajaDetalle.getModel();
        String[] dato = new String[6];
        int c = 0;
        int j = 0;
        
        try{
            BasculaIni basculaIni = new BasculaIni();
             double valorPeso = Double.parseDouble(basculaIni.lecturaFija());
        //alerta de modificacion de datos quemados
             //double valorPeso=3.61321;
        if (valorPeso <= 0) {
            JOptionPane.showMessageDialog(null, "verificar peso no acepta valores en cero o menores que cero");
            return;
        } else {
            System.out.println("else donde el valor de peso de bascula es diferente de 0");

            for (int i = 0; i < tablaCajaDetalle.getRowCount(); i++) {
                Object com = tablaCajaDetalle.getValueAt(i, 0);
                Object cant1 = tablaCajaDetalle.getValueAt(i, 4);
                System.out.println("valor com " + com);
                if (datos[0].equals(com)) {
                    System.out.println("INGRESO IF DONDE SUMA CANTIDA Y PESO DE PRODUCTO YA PESADO");
                    System.err.println("valor de cant1 "+cant1);
                    j = i;
                    double cantT = Double.parseDouble(cant1.toString())+valorPeso;
                    tablaCajaDetalle.setValueAt(cantT, i, 4);
                    c++;
                    calcularBascula();
                 //   recibi.setText("");
                  //  cambio.setText("");
                }

            }
            System.out.println("valor de c= " + c);
            if (c == 0) {
                System.out.println("if donde compara c==0 con abscula");
                dato[0] = datos[0];
                dato[1] = datos[1];
                dato[2] =datos[2] ;
                dato[3] = formatea.format(Double.parseDouble(datos[3]+2));
                dato[4] = valorPeso + "";

                tabladet.addRow(dato);

                tablaCajaDetalle.setModel(tabladet);
                calcularBascula();

              //  CajaDetalle.recibi.setText("");
              //  CajaDetalle.cambio.setText("");
            }
        }
        }catch (Exception e){
           // buscar.setText("");
            System.out.println("ingreso a execpcion de enter para bascula");
            
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    public void calcularBascula() {
        String pre;
        String can;
        double total = 0;
        double precio;
        double cantidad;
        double imp = 0.0;
        System.err.println("coma encontrada en "+ imp);
        for (int i = 0; i < tablaCajaDetalle.getRowCount(); i++) {
            pre = tablaCajaDetalle.getValueAt(i, 3).toString().replaceAll("\\.","");
            can = tablaCajaDetalle.getValueAt(i, 4).toString().replaceAll("\\,","");
            precio = Double.parseDouble(pre);
            cantidad = Double.parseDouble(can);
           if (ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")) {
               cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp=cantidad;
            }else{
                imp = precio * cantidad;
               
        }
            total = total + redondear((int)imp);
            tablaCajaDetalle.setValueAt(formatea.format(Math.rint(redondear((int)imp )* 100) / 100), i, 5);

        }
        this.totalDetalle.setText("" + formatea.format(Math.rint(total * 100) / 100));
       // this.buscar.setText("");

    }
    
    public int redondear(int numero){
       String cadena=numero+"";
       String redondeado="";
       if (cadena.length()>2) {
         int numero2 = Integer.parseInt(cadena.substring(0,cadena.length()-2));
         int numero3=Integer.parseInt((cadena.substring(cadena.length()-2,cadena.length())));
         
         if (numero3<25){
            redondeado="00";
        } else if(numero3>=25&&numero3<=50){
            redondeado="50";
        }else if(numero3<75&&numero3>50){
            redondeado="50";
        }else if(numero3>=75){
            redondeado="00";
            numero2+=1;
        }
        //System.err.println("numero redondeado es "+(numero2+redondeado));
     
        return Integer.parseInt(numero2+redondeado);
         
        }else return numero;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculo;
    private javax.swing.JLabel codigoL3;
    private javax.swing.JLabel codigoL4;
    private javax.swing.JLabel codigoL5;
    public static app.bolivia.swing.JCTextField fechaDetalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    public static app.bolivia.swing.JCTextField numFacDetalle;
    public static javax.swing.JTable tablaCajaDetalle;
    public static app.bolivia.swing.JCTextField totalDetalle;
    // End of variables declaration//GEN-END:variables

    private void ingresarValor(String[]datos) {
        // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String cant = null;
        String[] dato = new String[6];
        int c = 0;
        int j = 0;
        DefaultTableModel tabladet = (DefaultTableModel) ventas.CajaDetalle.tablaCajaDetalle.getModel();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        cant = JOptionPane.showInputDialog(this, "VALOR:", "Productos", JOptionPane.INFORMATION_MESSAGE);

        while (!OpcionesAl.isNumber(cant) && cant != null) {
            cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        if ((cant.equals("")) || (cant.equals("0"))) {
            JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
        } else {
            for (int i = 0; i < ventas.CajaDetalle.tablaCajaDetalle.getRowCount(); i++) {
                Object com = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 0);
                Object cant1 = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 4).toString().replaceAll("\\.","");
                if (datos[0].equals(com)) {
                    j = i;
                    System.out.println("se suma : "+cant+" con "+ cant1+"="+(cant+cant1));
                    int cantT = Integer.parseInt(cant) + Integer.parseInt((String) cant1);
                    ventas.CajaDetalle.tablaCajaDetalle.setValueAt(formatea.format(cantT), i, 4);
                    c++;
                    calcular();
                   // ventas.CajaDetalle.recibi.setText("");
                 //   ventas.CajaDetalle.cambio.setText("");
                }
            }
            if (c == 0) {

                dato[0] = datos[0];
                dato[1] = datos[1];
                dato[2] = datos[2];
                //System.out.println("datos venta"+datos[3]);
                dato[3] = formatea.format(Double.parseDouble(datos[3]+2));
                dato[4] = cant;

                tabladet.addRow(dato);

                ventas.CajaDetalle.tablaCajaDetalle.setModel(tabladet);
                calcular();

               // ventas.CajaDetalle.recibi.setText("");
                //ventas.CajaDetalle.cambio.setText("");
            }
        }
    }

    private void ingresarCantidad(String [] datos) {
        String cant = null;
        String[] dato = new String[6];
        int c = 0;
        int j = 0;
        DefaultTableModel tabladet = (DefaultTableModel) ventas.CajaDetalle.tablaCajaDetalle.getModel();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        cant = JOptionPane.showInputDialog(this, "Cantidad:", "Productos", JOptionPane.INFORMATION_MESSAGE);

        while (!OpcionesAl.isNumber(cant) && cant != null) {
            cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        if ((cant.equals("")) || (cant.equals("0"))) {
            JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
        } else {
            for (int i = 0; i < ventas.CajaDetalle.tablaCajaDetalle.getRowCount(); i++) {
                Object com = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 0);
                Object cant1 = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 4);
                if (datos[0].equals(com)) {
                    j = i;
                    int cantT = Integer.parseInt(cant) + Integer.parseInt((String) cant1);
                    ventas.CajaDetalle.tablaCajaDetalle.setValueAt(formatea.format(cantT), i, 4);
                    c++;
                    calcular();
                  //  ventas.CajaDetalle.recibi.setText("");
                  //  ventas.CajaDetalle.cambio.setText("");
                }
            }
            if (c == 0) {

                dato[0] = datos[0];
                dato[1] = datos[1];
                dato[2] = datos[2];
                dato[3] = formatea.format(Double.parseDouble(datos[3]+2));
                dato[4] = cant;

                tabladet.addRow(dato);

                ventas.CajaDetalle.tablaCajaDetalle.setModel(tabladet);
                calcular();

                //ventas.CajaDetalle.recibi.setText("");
               // ventas.CajaDetalle.cambio.setText("");
            }
        }
    }
  public void calcular() {
        String pre;
        String can;
        double total = 0;
        double precio;
        double cantidad=0;
        double imp = 0.0;

        for (int i = 0; i < ventas.CajaDetalle.tablaCajaDetalle.getRowCount(); i++) {
            pre = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 3).toString().replaceAll("\\.","");
            can = ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 4).toString().replaceAll("\\,","");
            System.out.println("valor que se coloca en importe"+can);
            precio = Double.parseDouble(pre);
            System.out.println("precio en calcular "+precio);
            cantidad = Double.parseDouble(can);
            
            
            if (ventas.CajaDetalle.tablaCajaDetalle.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")){
                cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp=cantidad;
            }else{
                imp = precio * cantidad;
            }
            total = total + redondear((int)imp);
            ventas.CajaDetalle.tablaCajaDetalle.setValueAt(formatea.format(Math.rint(redondear((int)imp) * 100) / 100), i, 5);

        }
        ventas.CajaDetalle.totalDetalle.setText("" + formatea.format(Math.rint(total * 100) / 100));

    }

    public static JTable getTablaCaja() {
        return tablaCajaDetalle;
    }

    public static void setTablaCaja(JTable tablaCaja) {
        CajaDetalle.tablaCajaDetalle = tablaCaja;
    }

    

    
    
   

    public static JCTextField getNumFac() {
        return numFacDetalle;
    }

    public static void setNumFac(JCTextField numFac) {
        CajaDetalle.numFacDetalle = numFac;
    }

   

   

    public static JCTextField getTotal() {
        return totalDetalle;
    }

    public static void setTotal(JCTextField total) {
        CajaDetalle.totalDetalle = total;
    }

   

   
  
}
