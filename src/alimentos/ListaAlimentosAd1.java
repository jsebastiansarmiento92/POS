/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alimentos;

import static alimentos.ListaAlimentosAd.tablaProductos;
import app.bolivia.swing.JCTextField;
import java.awt.Cursor;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import principal.BasculaIni;
import usuarios.*;
import ventas.BasculaFrame;
import ventas.CajaAd;
import ventas.LecturaSerial;

/**
 *
 * @author Rojeru San CL
 */
public class ListaAlimentosAd1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Usuarios
     */
    BasculaFrame basculaFrame;
    DecimalFormat formatea;

    public ListaAlimentosAd1() {
        initComponents();
        formatea = new DecimalFormat("###,###.##");
        tablaProductos2.getTableHeader().setDefaultRenderer(new principal.EstiloTablaHeader());
        tablaProductos2.setDefaultRenderer(Object.class, new principal.EstiloTablaRenderer());
        this.tipoAl.setCursor(new Cursor(12));
        tablaProductos2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.setFrameIcon(new ImageIcon(getClass().getResource("/imagenes/alimentos/icono.png")));
        OpcionesAl.listar3("");

        tipoAl.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent ie) {
                if (tipoAl.getSelectedIndex() == 0) {
                    tipoL.setIcon(new ImageIcon(getClass().getResource("/imagenes/alimentos/botana.png")));
                    OpcionesAl.listar3("");
                }
                if (tipoAl.getSelectedIndex() == 1) {
                    tipoL.setIcon(new ImageIcon(getClass().getResource("/imagenes/alimentos/botana.png")));
                    OpcionesAl.listar3(tipoAl.getSelectedItem().toString());
                }
                if (tipoAl.getSelectedIndex() == 2) {
                    tipoL.setIcon(new ImageIcon(getClass().getResource("/imagenes/alimentos/botana.png")));
                    OpcionesAl.listar3(tipoAl.getSelectedItem().toString());
                }
                if (tipoAl.getSelectedIndex() == 3) {
                    tipoL.setIcon(new ImageIcon(getClass().getResource("/imagenes/alimentos/botana.png")));
                    OpcionesAl.listar3(tipoAl.getSelectedItem().toString());
                }

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        buscar = new app.bolivia.swing.JCTextField();
        codigoL1 = new javax.swing.JLabel();
        tipoAl = new org.bolivia.combo.SComboBoxBlue();
        tipoL = new javax.swing.JLabel();
        consultarBascula = new javax.swing.JButton();
        enviar1 = new javax.swing.JButton();
        enviar2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("LISTA DE ALIMENTOS");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaProductos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "TIPO ALIMENTO", "NOMBRE ALIMENTO", "PRECIO $", "PRECIO LIBRA $"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaProductos2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaProductos2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaProductos2KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProductos2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "OPCIONES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel4KeyPressed(evt);
            }
        });
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buscar.setBackground(new java.awt.Color(34, 102, 145));
        buscar.setBorder(null);
        buscar.setForeground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setOpaque(false);
        buscar.setPhColor(new java.awt.Color(255, 255, 255));
        buscar.setPlaceholder("CÓDIGO/NOMBRE");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscarKeyReleased(evt);
            }
        });
        jPanel4.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 180, -1));

        codigoL1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        codigoL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usuarios/buscarL.png"))); // NOI18N
        jPanel4.add(codigoL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 250, 52));

        tipoAl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TIPO ALIMENTO", "BASCULA", "VALOR", "CANTIDAD" }));
        tipoAl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel4.add(tipoAl, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 183, -1));

        tipoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/alimentos/caldo.png"))); // NOI18N
        jPanel4.add(tipoL, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, -1, 52));

        consultarBascula.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        consultarBascula.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/buscaF2.png"))); // NOI18N
        consultarBascula.setText("CONSULTAR");
        consultarBascula.setBorder(null);
        consultarBascula.setBorderPainted(false);
        consultarBascula.setContentAreaFilled(false);
        consultarBascula.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        consultarBascula.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        consultarBascula.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/alimentos/regis2.png"))); // NOI18N
        consultarBascula.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        consultarBascula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarBasculaActionPerformed(evt);
            }
        });
        jPanel4.add(consultarBascula, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 90, 100));

        enviar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enviar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/borrado1.png"))); // NOI18N
        enviar1.setText("Enviar a Caja");
        enviar1.setBorder(null);
        enviar1.setBorderPainted(false);
        enviar1.setContentAreaFilled(false);
        enviar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enviar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        enviar1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/alimentos/regis2.png"))); // NOI18N
        enviar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        enviar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar1ActionPerformed(evt);
            }
        });
        jPanel4.add(enviar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 90, 100));

        enviar2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enviar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/caja/borrado1.png"))); // NOI18N
        enviar2.setText("Sumar a Caja");
        enviar2.setBorder(null);
        enviar2.setBorderPainted(false);
        enviar2.setContentAreaFilled(false);
        enviar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enviar2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        enviar2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/alimentos/regis2.png"))); // NOI18N
        enviar2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        enviar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviar2ActionPerformed(evt);
            }
        });
        jPanel4.add(enviar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, 90, 100));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarKeyReleased
            buscar.setText(buscar.getText().toUpperCase());
            OpcionesAl.listar3(buscar.getText());
	}//GEN-LAST:event_buscarKeyReleased
   
        public void calcularEliminar() {
        String pre;
        String can;
        double total = 0;
        double precio;
        double cantidad = 0;
        double imp = 0.0;

        for (int i = 0; i < ventas.CajaAd.tablaCaja.getRowCount(); i++) {
            
            pre = ventas.CajaAd1.tablaCaja2.getValueAt(i, 3).toString().replaceAll("\\.","");
            System.out.println("precion de eleminar: "+pre);
            can = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4).toString().replaceAll("\\,","");
            System.out.println("cantidad de eleminar: "+can);
            precio = Double.parseDouble(pre);
            cantidad = Double.parseDouble(can);
            
            if (ventas.CajaAd1.tablaCaja2.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")) {
                cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp = cantidad;
            } else {
                imp = precio * cantidad;
            }
            total = total + redondear((int)imp);
            
            ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(Math.rint(redondear((int)imp) * 100)/ 100), i, 5);

        }
        ventas.CajaAd1.total2.setText("" + formatea.format(Math.rint(total * 100) / 100));
        ventas.CajaAd1.buscar2.setText("");
    }
        public void calcularValor1() {
        String pre;
        String can;
        double total = 0;
        int precio;
        double cantidad = 0;
        double imp = 0.0;

        for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
            pre = ventas.CajaAd1.tablaCaja2.getValueAt(i, 3).toString().replaceAll("\\.","");
            can = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4).toString().replaceAll("\\,","");
            precio =Integer.parseInt(pre);
            cantidad = Double.parseDouble(can);
            if (ventas.CajaAd1.tablaCaja2.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")) {
                cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp = cantidad;
            } else {
                System.out.println("ingreso a hacer la operacion :" + precio+ " con "+ cantidad +" resultador: "+( precio * cantidad));
                imp = precio * cantidad;
            }
            System.out.println("ingreso a hacer la operacion :" + total+ " con "+ imp +" resultador: "+( total + imp));
            total = total + imp;
            
            ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(Math.rint(imp * 100)/ 100), i, 5);

        }
        ventas.CajaAd1.total2.setText("" + formatea.format(Math.rint(total * 100) / 100));
        ventas.CajaAd1.buscar2.setText("");
    }
        public void calcular() {
        String pre;
        String can;
        double total = 0;
        double precio;
        double cantidad = 0;
        double imp = 0.0;

        for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
            pre = ventas.CajaAd1.tablaCaja2.getValueAt(i, 3).toString().replaceAll("\\.","");
            can = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4).toString().replaceAll("\\,","");
            precio = Double.parseDouble(pre);
            cantidad = Double.parseDouble(can);
            if (ventas.CajaAd1.tablaCaja2.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")) {
                cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp = cantidad;
            } else {
                imp = precio * cantidad;
            }
            total = total + redondear((int)imp);
            
            ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(Math.rint(redondear((int)imp)* 100)/ 100), i, 5);

        }
        ventas.CajaAd1.total2.setText("" + formatea.format(Math.rint(total * 100) / 100));
        ventas.CajaAd1.buscar2.setText("");
    }
	private void consultarBasculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarBasculaActionPerformed

            
	}//GEN-LAST:event_consultarBasculaActionPerformed
    public void calcularBascula() {
        String pre;
        String can;
        double total = 0;
        double precio;
        double cantidad;
        double imp = 0;

        for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
            pre = ventas.CajaAd1.tablaCaja2.getValueAt(i, 3).toString().replaceAll("\\.","");
            can = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4).toString().replaceAll("\\,","");
            precio = Double.parseDouble(pre);
            System.out.println("cantidad de bascula "+can);
            cantidad = Double.parseDouble(can);
            if (ventas.CajaAd1.tablaCaja2.getValueAt(i, 1).toString().equalsIgnoreCase("VALOR")) {
                
                cantidad=Integer.parseInt((can+"").replaceAll("\\.",""));
                imp = cantidad;
            } else {
                imp = precio * cantidad;
                
            }
            total = total +redondear((int)imp);
            ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(Math.rint(redondear((int)imp) * 100) / 100), i, 5);

        }
        ventas.CajaAd1.total2.setText("" +formatea.format(Math.rint(total * 100) / 100));
        ventas.CajaAd1.buscar2.setText("");
    }
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_buscarActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_formKeyPressed
public int redondear(int numero){
       String cadena=numero+"";
       System.out.println("el numero del sistema " + numero);
       String redondeado="";
        System.out.println("cadena que se sustrae de bascula "+cadena.substring(0,cadena.length()-2));
        if (cadena.length()>2) {
         int numero2 = Integer.parseInt(cadena.substring(0,cadena.length()-2));
         int numero3=Integer.parseInt((cadena.substring(cadena.length()-2,cadena.length())));
         if (numero3<25){
            redondeado="00";
        } else if(numero3>=25&&numero3<=50){
            redondeado="50";
        }else if(numero3<75&&numero3>50){
            redondeado="50";
        }else if(numero3>=75){
            redondeado="00";
            numero2+=1;
        }
        //System.err.println("numero redondeado es "+(numero2+redondeado));
     
        return Integer.parseInt(numero2+redondeado);
         
        }else return numero;
    }
    private void jPanel4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel4KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            System.out.println("tabulacion 1");
        }
    }//GEN-LAST:event_jPanel4KeyPressed

    private void tablaProductos2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaProductos2KeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            enviar1.doClick();
        }
    }//GEN-LAST:event_tablaProductos2KeyPressed

    private void enviar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar1ActionPerformed
        // TODO add your handling code here:
        
        if (tablaProductos2.getRowCount() > 0) {
                try {
                    String cant = null;
                    DefaultTableModel tabladet = (DefaultTableModel) ventas.CajaAd1.tablaCaja2.getModel();

                    String[] dato = new String[6];
                    
                    int fila = tablaProductos2.getSelectedRow();

                    if (fila == -1) {
                        JOptionPane.showMessageDialog(this, "Seleccione un registro.", "Alimentos", 0,
                                new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                    } else {
                        String cod = tablaProductos2.getValueAt(fila, 0).toString();
                        String tipo = tablaProductos2.getValueAt(fila, 1).toString();
                        String nom = tablaProductos2.getValueAt(fila, 2).toString();
                        String precio = tablaProductos2.getValueAt(fila, 3).toString();

                        int c = 0;
                        int j = 0;
                        //int option=JOptionPane.showConfirmDialog(null, "Producto con balanza?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        //System.out.println(option);
                        if (tipo.equalsIgnoreCase("BASCULA")) {
                            BasculaIni basculaIni = new BasculaIni();
                            double valorPeso = Double.parseDouble(basculaIni.lecturaFija());
                            
                            //alerta de modificacion de datos quemados
                               //double     valorPeso=5.61321;
                                    
                            if (valorPeso <= 0) {
                                JOptionPane.showMessageDialog(null, "verificar peso no acepta valores en cero o menores que cero");
                                return;
                            } else {
                                System.out.println("else donde el valor de peso de bascula es diferente de 0");

                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    System.out.println("ingreso de for con valor i = " + i);
                                    if (cod.equals(com)) {
                                        j = i;
                                        double cantT = valorPeso ;
                                       // DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(cantT, i, 4);
                                        JOptionPane.showMessageDialog(rootPane, cant1);
                                        c++;
                                        calcularBascula();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }

                                }
                                System.out.println("valor de c= " + c);
                                if (c == 0) {
                                    System.out.println("if donde compara c==0 con abscula");
                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    dato[3] = formatea.format(Double.parseDouble(precio));
                                    dato[4] = valorPeso + "";

                                    tabladet.addRow(dato);

                                    ventas.CajaAd1.tablaCaja2.setModel(tabladet);
                                    calcularBascula();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }

                        } else if (tipo.equalsIgnoreCase("CANTIDAD")||tipo.equalsIgnoreCase("GALGUERIA")) {
                            cant = JOptionPane.showInputDialog(this, "Cantidad:", "Productos", JOptionPane.INFORMATION_MESSAGE);

                            while (!OpcionesAl.isNumber(cant) && cant != null) {
                                cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            if ((cant.equals("")) || (cant.equals("0"))) {
                                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                            } else {
                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    if (cod.equals(com)) {
                                        j = i;
                                        int cantT = Integer.parseInt(cant) + Integer.parseInt((String) cant1);
                                     //   DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(cantT), i, 4);
                                        c++;
                                        calcular();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }
                                }
                                if (c == 0) {

                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    dato[3] = formatea.format(Double.parseDouble(precio));
                                    dato[4] = cant;

                                    tabladet.addRow(dato);

                                    ventas.CajaAd1.tablaCaja2.setModel(tabladet);
                                    calcular();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }
                        } else if (tipo.equalsIgnoreCase("VALOR")) {
                            cant = JOptionPane.showInputDialog(this, "Valor:", "Productos", JOptionPane.INFORMATION_MESSAGE);

                            while (!OpcionesAl.isNumber(cant) && cant != null) {
                                cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            if ((cant.equals("")) || (cant.equals("0"))) {
                                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                            } else {
                                System.out.println("Ingreso A VALOR ");
                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    if (cod.equals(com)) {
                                        j = i;
                                        System.out.println("se suma "+ cant+" con "+cant1);
                                        int cantT = Integer.parseInt(cant) + Integer.parseInt(((String) cant1).replaceAll("\\.",""));
                                       // DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(cantT), i, 4);
                                        c++;
                                        calcular();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }
                                }
                                if (c == 0) {
                                    System.out.println("ingreso pro primera vez de valor");
                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    System.out.println("precio "+precio);
                                    dato[3] = precio;
                                    System.out.println("cantidad "+cant);
                                    dato[4] = cant;

                                    tabladet.addRow(dato);

                                    ventas.CajaAd1.tablaCaja2.setModel(tabladet);
                                    calcular();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }
                        }
                    }
                } catch (Exception e) {
                    System.err.println(e);
                     e.printStackTrace();
                     JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay registros.", "Productos", 0,
                        new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
            }
            this.setVisible(false);
            ventas.CajaAd1.buscar2.requestFocus();
           this.dispose();
    }//GEN-LAST:event_enviar1ActionPerformed

    private void enviar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviar2ActionPerformed
        // TODO add your handling code here:
        
          if (tablaProductos2.getRowCount() > 0) {
                try {
                    String cant = null;
                    DefaultTableModel tabladet = (DefaultTableModel) ventas.CajaAd1.tablaCaja2.getModel();

                    String[] dato = new String[6];
                    
                    int fila = tablaProductos2.getSelectedRow();

                    if (fila == -1) {
                        JOptionPane.showMessageDialog(this, "Seleccione un registro.", "Alimentos", 0,
                                new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
                    } else {
                        String cod = tablaProductos2.getValueAt(fila, 0).toString();
                        String tipo = tablaProductos2.getValueAt(fila, 1).toString();
                        String nom = tablaProductos2.getValueAt(fila, 2).toString();
                        String precio = tablaProductos2.getValueAt(fila, 3).toString();

                        int c = 0;
                        int j = 0;
                        //int option=JOptionPane.showConfirmDialog(null, "Producto con balanza?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        //System.out.println(option);
                        if (tipo.equalsIgnoreCase("BASCULA")) {
                            BasculaIni basculaIni = new BasculaIni();
                            double valorPeso = Double.parseDouble(basculaIni.lecturaFija());
                            
                            //alerta de modificacion de datos quemados
                              //double     valorPeso=5.61321;
                                    
                            if (valorPeso <= 0) {
                                JOptionPane.showMessageDialog(null, "verificar peso no acepta valores en cero o menores que cero");
                                return;
                            } else {
                                System.out.println("else donde el valor de peso de bascula es diferente de 0");

                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    System.out.println("ingreso de for con valor i = " + i);
                                    System.out.println("se compara "+cod+" == "+com);
                                    if (cod.equals(com)) {
                                        j = i;
                                        double cantT = Double.parseDouble(cant1.toString())+valorPeso ;
                                       // DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(cantT, i, 4);
                                        JOptionPane.showMessageDialog(rootPane, cant1);
                                        c++;
                                        calcularBascula();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }

                                }
                                System.out.println("valor de c= " + c);
                                if (c == 0) {
                                    System.out.println("if donde compara c==0 con abscula");
                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    dato[3] = formatea.format(Double.parseDouble(precio));
                                    dato[4] = valorPeso + "";

                                    tabladet.addRow(dato);

                                    ventas.CajaAd1.tablaCaja2.setModel(tabladet);
                                    calcularBascula();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }

                        } else if (tipo.equalsIgnoreCase("CANTIDAD")||tipo.equalsIgnoreCase("GALGUERIA")) {
                            cant = JOptionPane.showInputDialog(this, "Cantidad:", "Productos", JOptionPane.INFORMATION_MESSAGE);

                            while (!OpcionesAl.isNumber(cant) && cant != null) {
                                cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            if ((cant.equals("")) || (cant.equals("0"))) {
                                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                            } else {
                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    if (cod.equals(com)) {
                                        j = i;
                                        int cantT = Integer.parseInt(cant) + Integer.parseInt((String) cant1);
                                     //   DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(cantT), i, 4);
                                        c++;
                                        calcular();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }
                                }
                                if (c == 0) {

                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    dato[3] = formatea.format(Double.parseDouble(precio));
                                    dato[4] = cant;

                                    tabladet.addRow(dato);

                                    ventas.CajaAd.tablaCaja.setModel(tabladet);
                                    calcular();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }
                        } else if (tipo.equalsIgnoreCase("VALOR")) {
                            cant = JOptionPane.showInputDialog(this, "Valor:", "Productos", JOptionPane.INFORMATION_MESSAGE);

                            while (!OpcionesAl.isNumber(cant) && cant != null) {
                                cant = JOptionPane.showInputDialog(this, "Debe ingresar valores numericos\ny que sean mayor a 0:",
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            }
                            if ((cant.equals("")) || (cant.equals("0"))) {
                                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor mayor que 0");
                            } else {
                                System.out.println("Ingreso A VALOR ");
                                for (int i = 0; i < ventas.CajaAd1.tablaCaja2.getRowCount(); i++) {
                                    Object com = ventas.CajaAd1.tablaCaja2.getValueAt(i, 0);
                                    Object cant1 = ventas.CajaAd1.tablaCaja2.getValueAt(i, 4);
                                    if (cod.equals(com)) {
                                        j = i;
                                        System.out.println("se suma "+ cant+" con "+cant1);
                                        int cantT = Integer.parseInt(cant) + Integer.parseInt(((String) cant1).replaceAll("\\.",""));
                                       // DecimalFormat formatea = new DecimalFormat("###,###.##");
                                        System.out.println("valor con formato "+ formatea.format(cantT));
                                        ventas.CajaAd1.tablaCaja2.setValueAt(formatea.format(cantT), i, 4);
                                        c++;
                                        calcular();
                                        ventas.CajaAd1.recibi2.setText("");
                                        ventas.CajaAd1.cambio2.setText("");
                                        ventas.CajaAd1.buscar2.setText("");
                                    }
                                }
                                if (c == 0) {
                                    System.out.println("ingreso pro primera vez de valor");
                                    dato[0] = cod;
                                    dato[1] = tipo;
                                    dato[2] = nom;
                                    System.out.println("precio "+precio);
                                    dato[3] = precio;
                                    System.out.println("cantidad "+cant);
                                    dato[4] = cant;

                                    tabladet.addRow(dato);

                                    ventas.CajaAd1.tablaCaja2.setModel(tabladet);
                                    calcular();

                                    ventas.CajaAd1.recibi2.setText("");
                                    ventas.CajaAd1.cambio2.setText("");
                                    ventas.CajaAd1.buscar2.setText("");
                                }
                            }
                        }
                    }
                } catch (Exception e) {
                    System.err.println(e);
                     e.printStackTrace();
                     JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "No hay registros.", "Productos", 0,
                        new ImageIcon(getClass().getResource("/imagenes/usuarios/info.png")));
            }
            this.setVisible(false);
            ventas.CajaAd1.buscar2.requestFocus();
           this.dispose();
        
        
    }//GEN-LAST:event_enviar2ActionPerformed
    
    public JCTextField getBuscar() {
        return buscar;
    }

    public void setBuscar(JCTextField buscar) {
        this.buscar = buscar;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private app.bolivia.swing.JCTextField buscar;
    private javax.swing.JLabel codigoL1;
    private javax.swing.JButton consultarBascula;
    private javax.swing.JButton enviar1;
    private javax.swing.JButton enviar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tablaProductos2;
    private org.bolivia.combo.SComboBoxBlue tipoAl;
    private javax.swing.JLabel tipoL;
    // End of variables declaration//GEN-END:variables
}
